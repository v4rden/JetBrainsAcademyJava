type: edu
custom_name: stage4
files:
- name: src/bot/SimpleBot.java
  visible: true
  text: |
    package bot;

    import java.util.Scanner;

    public class SimpleBot {
        final static Scanner scanner = new Scanner(System.in); // Do not change this line

        public static void main(String[] args) {
            greet("Aid", "2018"); // change it as you need
            remindName();
            guessAge();
            count();
            // ...
            end();
        }

        static void greet(String assistantName, String birthYear) {
            System.out.println("Hello! My name is " + assistantName + ".");
            System.out.println("I was created in " + birthYear + ".");
            System.out.println("Please, remind me your name.");
        }

        static void remindName() {
            String name = scanner.nextLine();
            System.out.println("What a great name you have, " + name + "!");
        }

        static void guessAge() {
            System.out.println("Let me guess your age.");
            System.out.println("Say me remainders of dividing your age by 3, 5 and 7.");
            int rem3 = scanner.nextInt();
            int rem5 = scanner.nextInt();
            int rem7 = scanner.nextInt();
            int age = (rem3 * 70 + rem5 * 21 + rem7 * 15) % 105;
            System.out.println("Your age is " + age + "; that's a good time to start programming!");
        }

        static void count() {
            System.out.println("Now I will prove to you that I can count to any number you want.");
            int num = scanner.nextInt();
            for (int i = 0; i <= num; i++) {
                System.out.printf("%d!\n", i);
            }
        }

        static void test() {
            System.out.println("Let's test your programming knowledge.");
            // write your code here
        }

        static void end() {
            System.out.println("Congratulations, have a nice day!"); // Do not change this text
        }
    }
  learner_created: false
- name: test/PersonalAssistantTest.java
  visible: false
  text: |
    import bot.SimpleBot;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;


    class Clue {
        int age;
        String name;
        int count;

        Clue(String name, int age, int count) {
            this.age = age;
            this.name = name;
            this.count = count;
        }
    }


    public class PersonalAssistantTest extends StageTest<Clue> {

        public PersonalAssistantTest() {
            super(SimpleBot.class);
        }

        @Override
        public List<TestCase<Clue>> generate() {
            String input = "Marry\n1 0 5\n10";

            for (int i = 1; i < 9; i++) {
                input += "\n" + i;
            }

            return List.of(
                new TestCase<Clue>()
                    .setInput(input)
                    .setAttach(new Clue("Marry", 40, 10))
            );
        }

        @Override
        public CheckResult check(String reply, Clue clue) {

            String[] lines = reply.trim().split("\n");

            int length = 9 + clue.count + 1;

            if (lines.length <= length) {
                return CheckResult.wrong(
                    "You should output at least " + (length + 1) + " lines " +
                    "(for the count number " + clue.count +").\n" +
                    "Lines found: " + lines.length + "\n" +
                    "Your output:\n" +
                    reply
                );
            }

            String lineWithName = lines[3].toLowerCase();
            String name = clue.name.toLowerCase();

            if (!lineWithName.contains(name)) {
                return CheckResult.wrong(
                    "The name was " + clue.name + "\n" +
                    "But the 4-th line was:\n" +
                    "\"" + lines[3] + "\"\n\n" +
                    "4-th line should contain a name of the user"
                );
            }

            String lineWithAge = lines[6].toLowerCase();
            String age = Integer.toString(clue.age);

            if (!lineWithAge.contains(age)) {
                return CheckResult.wrong(
                    "Can't find a correct age " +
                    "in the last line of output! " +
                    "Maybe you calculated the age wrong?\n\n" +
                    "Your last line: \n" + "\"" + lines[6] + "\""
                );
            }

            for (int i = 0; i < clue.count + 1; i++) {
                String numLine = lines[i + 8];
                String actualNum = i + "!";

                if (!numLine.equals(actualNum)) {
                    return CheckResult.wrong(
                        "Expected " + (i+8) + "-th line: \n" +
                        "\"" + actualNum + "\"\n" +
                        "Your "+ (i+8) + "-th line: \n" +
                        "\"" + numLine + "\""
                    );
                }
            }

            String lastLine = lines[lines.length - 1];

            if (!lastLine.equals("Congratulations, have a nice day!")) {
                return CheckResult.wrong(
                    "Your last line should be:\n" +
                    "\"Congratulations, have a nice day!\"\n" +
                    "Found:\n" +
                    "\"" + lastLine + "\""
                );
            }

            return CheckResult.correct();
        }

    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/31/stages/168/implement
status: Failed
feedback:
  message: "Exception in test #1\n\nProbably your program run out of input (Scanner\
    \ tried to read more than expected).\n\njava.util.NoSuchElementException\n\tat\
    \ java.base/java.util.Scanner.throwFor(Scanner.java:937)\n\tat java.base/java.util.Scanner.next(Scanner.java:1478)\n\
    \tat bot.SimpleBot.test(SimpleBot.java:59)\n\tat bot.SimpleBot.main(SimpleBot.java:14)\n\
    \nPlease find below the output of your program during this failed test.\nNote\
    \ that the &#39;&gt;&#39; character indicates the beginning of the input line.\n\
    \n---\n\nHello! My name is Aid.\nI was created in 2018.\nPlease, remind me your\
    \ name.\n&gt; Marry\nWhat a great name you have, Marry!\nLet me guess your age.\n\
    Say me remainders of dividing your age by 3, 5 and 7.\n&gt; 1 0 5\nYour age is\
    \ 40; that&#39;s a good time to start programming!\nNow I will prove to you that\
    \ I can count to any number you want.\n&gt; 10\n0!\n1!\n2!\n3!\n4!\n5!\n6!\n7!\n\
    8!\n9!\n10!\nLet&#39;s test your programming knowledge.\nWhy do we use methods?\n\
    1. To repeat a statement multiple times.\n2. To decompose a program into several\
    \ small subroutines.\n3. To determine the execution time of a program.\n4. To\
    \ interrupt the execution of a program.\n&gt; 1\nPlease, try again.\n&gt; 2\n\
    Please, try again.\n&gt; 3\nPlease, try again.\n&gt; 4\nPlease, try again.\n&gt;\
    \ 5\nPlease, try again.\n&gt; 6\nPlease, try again.\n&gt; 7\nPlease, try again.\n\
    &gt; 8\nPlease, try again."
  time: Thu, 03 Sep 2020 12:46:32 UTC
record: -1
